apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.elviraminnullina.nike_test_app"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_BASE_URL", '"https://mashape-community-urban-dictionary.p.rapidapi.com/"'
        buildConfigField "String", "API_HOST", '"mashape-community-urban-dictionary.p.rapidapi.com"'
        buildConfigField "String", "API_KEY", readApiKey()
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    def nav_version = "2.2.1"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    //Dagger2
    implementation 'com.google.dagger:dagger:2.24'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    //AssistedInject for save state instance
    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.2'
    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.2'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'

    //rx
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //okhttp3
    implementation "com.squareup.okhttp3:okhttp:4.3.1"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // Navigation graph
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //material design
    implementation 'com.google.android.material:material:1.1.0-beta01'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    testImplementation "org.mockito:mockito-core:2.28.2"
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation("androidx.arch.core:core-testing:2.0.0") {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    }
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

}

private String readApiKey() {
    def keysPropertiesFile = rootProject.file("keys.properties")
    def keysProperties = new Properties()
    try {
        keysProperties.load(new FileInputStream(keysPropertiesFile))
        def apiKey = keysProperties['api_key']
        return apiKey == null ? '""' : apiKey
    } catch (ignored) {
        return '""'
    }
}
